buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.beryx:badass-runtime-plugin:1.8.5"
    }
}
apply plugin: 'application'
apply plugin: 'org.beryx.runtime'

sourceSets.main.resources.srcDirs += [rootProject.file('assets').path]
mainClassName = 'io.horrorshow.lwjgl3.Lwjgl3Launcher'
eclipse.project.name = appName + '-lwjgl3'
sourceCompatibility = 11.0

dependencies {
    implementation project(':core')
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    implementation "com.badlogicgames.gdx:gdx-controllers-lwjgl3:$gdxVersion"
}

import org.gradle.internal.os.OperatingSystem

run {
    workingDir = rootProject.file('assets').path
    setIgnoreExitValue(true)

    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
        // Required to run LWJGL3 Java apps on MacOS
        jvmArgs += "-XstartOnFirstThread"
    }
}
jar {
    destinationDirectory = file("$buildDir/lib") // new
    archiveFileName = "${appName}-${archiveVersion.get()}.jar" // new

    //// These can be excluded because they add to the jar size but libGDX 1.9.11 can't use them.
    //// If your libGDX version is 1.9.10 or earlier, or is 1.9.12-SNAPSHOT or later, you can leave
    //// the following line commented; if you use 1.9.11 exactly, or if you use 1.9.12-SNAPSHOT but
    //// don't need ARM Linux support, you can uncomment it safely.
    //// It's always safe to keep that line commented out; it only affects JAR size.
    //exclude('linux/arm32/**', 'linux/arm64/**')
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

jpackageImage.dependsOn jar

runtime {
    options = ['--strip-debug',
               '--compress', '2',
               '--no-header-files',
               '--no-man-pages',
               '--strip-native-commands',
               '--vm', 'server']
    modules = ['java.base',
               'java.desktop',
               'jdk.unsupported']

    jpackage {
        installerOptions += ['--vendor', 'horrorshow.io', '--description', 'Hero game']
        mainJar = jar.archiveFileName.get()
        installerName = imageName = appName

        if (OperatingSystem.current().windows) {
            imageOptions += ['--win-console'] //, "--icon", file("../assets/icons/Icon.ico") ]
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut', '--win-upgrade-uuid', 'd57b369f-307a-4ebc-b8fd-ba98cc7ea3e7']
        } else {
            //imageOptions += ["--icon", file("../assets/icons/Icon-32.png")]
            installerOptions += ['--linux-menu-group', '--linux-shortcut']
        }
    }
}